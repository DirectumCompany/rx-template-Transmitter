<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RelatedDocumentsForSending" xml:space="preserve">
    <value>Связанные документы для отправки</value>
  </data>
  <data name="SelectDocuments" xml:space="preserve">
    <value>Выберите документы</value>
  </data>
  <data name="AwaitingDispatch" xml:space="preserve">
    <value>Ожидает отправки</value>
  </data>
  <data name="PreparedByPropertiesAreEmpty" xml:space="preserve">
    <value>Не заполнены должность и телефон сотрудника, указанного в поле "Подготовил"</value>
  </data>
  <data name="CurrentEmployeePropertiesAreEmpty" xml:space="preserve">
    <value>Не заполнены должность и телефон текущего сотрудника</value>
  </data>
  <data name="PreparedByIsSystem" xml:space="preserve">
    <value>В поле "Подготовил" укажите действующего сотрудника</value>
  </data>
  <data name="NeedCorrectExt" xml:space="preserve">
    <value>В отправляемых приложениях есть документы в формате, отличном от PDF, TIF, DOC, TXT, XML. В этом случае есть риск отказа в приеме документа, т.к. на принимающей стороне возможно не смогут открыть документ. Рекомендуется преобразовать приложения в формат PDF.</value>
  </data>
  <data name="Abort" xml:space="preserve">
    <value>Прекратить</value>
  </data>
  <data name="NotAbort" xml:space="preserve">
    <value>Не прекращать</value>
  </data>
  <data name="NeedPdfForMedo26" xml:space="preserve">
    <value>Для отправки по версии обмена 2.6 необходим pdf документ.</value>
  </data>
  <data name="NeedEnterSignedBy" xml:space="preserve">
    <value>Для отправки по МЭДО необходимо указать подписанта в связанном документе "{0}"</value>
  </data>
  <data name="FillInAddendumsPageCount" xml:space="preserve">
    <value>Заполните количество страниц приложений</value>
  </data>
  <data name="DocumentWasSending" xml:space="preserve">
    <value>Документ поставлен в очередь на отправку</value>
  </data>
  <data name="SendingDocumentsErrors" xml:space="preserve">
    <value>При отправке документа адресатам возникли ошибки</value>
  </data>
  <data name="CounterpartyIsNotBusinessUnit" xml:space="preserve">
    <value>Для корреспондента {0} не может быть выбран способ доставки {1}</value>
  </data>
  <data name="NoRegistrarInBusinessUnit" xml:space="preserve">
    <value>В организации {0} не указан регистратор для вида документа {1}.</value>
  </data>
  <data name="UseReferralByCompetence" xml:space="preserve">
    <value>Нельзя отправить данное письмо адресатам: {0}. Для отправки используйте задачу по перенаправлению обращения либо измените способ доставки.</value>
  </data>
  <data name="AttachIsNotValid" xml:space="preserve">
    <value>Необходимо заполнить все обязательные свойства для вложений.</value>
  </data>
  <data name="DocumentNotRegistered" xml:space="preserve">
    <value>Необходимо зарегистрировать документ.</value>
  </data>
  <data name="MailTemplate" xml:space="preserve">
    <value>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="utf-8"&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div&gt;Вам отправлено письмо от {0} для регистрации.&lt;/div&gt;
	&lt;div&gt;Отправитель - {1}.&lt;/div&gt;
               &lt;div&gt;E-mail организации {2}.&lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;</value>
  </data>
  <data name="DeliveryState_Registered" xml:space="preserve">
    <value>Зарегистрировано</value>
  </data>
  <data name="DeliveryState_Sent" xml:space="preserve">
    <value>Отправлено</value>
  </data>
  <data name="DeliveryState_Return" xml:space="preserve">
    <value>Возврат</value>
  </data>
  <data name="DeliveryState_RedirectedTo" xml:space="preserve">
    <value>Перенаправлено</value>
  </data>
  <data name="IncomingRequestLetter" xml:space="preserve">
    <value>Входящее письмо по обращению</value>
  </data>
  <data name="DirectumRXDeliveryMethod" xml:space="preserve">
    <value>Директум RX</value>
  </data>
  <data name="CounterpartyIsNotEmail" xml:space="preserve">
    <value>У корреспондента {0} не заполнен E-mail</value>
  </data>
</root>